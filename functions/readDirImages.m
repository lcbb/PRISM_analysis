function imageFiles = readDirImages(imDirectory,imFormat,fixNums)
% 
% This function will find all files in the specified directory with the
% user defined extension |imFormat|. Additionally, the images will be
% re-ordered, if necessary, so that the last number before the file
% extension is in increasing order. This fixes the problem with the dir
% command returning numbered images which are not zero-padded in the wrong
% order.
%
% For example, if a folder contains img1.tif, img2.tif ... img10.tif, the
% dir command will return img1.tif, img10.tif, img2.tif ..., whereas this
% function will return them in the correct order, with img10.tif last. This
% only works with files where the image number is the last element of the
% name before the file extension.
% 
% Input:
% 
%   directory - the directory to search for files in. (non-recursive);
%   Optional. If not input, current directory is used.
%
%   imFormat - specifies the format of the images to be read in (e.g. tif).
%
%   fixNums - 1 if fixed the sequence of image numbering at the end of file
%   name (usually for time series images), and 0 otherwise. See explanation
%   above.
%
% Output:
%
%    imageFiles - a structure with 4 fields: 
%         imFiles: structure generated by MATLAB dir() command.
%         filenames: cell array of image file names.
%         filenamesWithPath: |filenames| with full path in name.
%         imgNums: numbers of the images right before the file extension,
%         which will be ordered if fixNums = 1.
% 
% Hunter Elliott, 2/2010
% Modified by Simon Gordonov, 11/2013

if isempty(imDirectory)
    imDirectory = pwd;
end

% ---- Get the file names.  ---- %
    imFiles = dir(fullfile(imDirectory,['*.',imFormat]));
    filenames = {imFiles.name}';

%  ---- Fix the order of the files if they are numbered.  ---- %
if fixNums == 1
    %First, extract the number from the end of the file, if present
    fNums = arrayfun(@(x)(str2double(...
        x.name(max(regexp(x.name(1:end-4),'\D'))+1:end-4))),imFiles);
    %The sort function handles NaNs, and will not re-order if the images
    %are not numbered.
    [imgNums,iX] = sort(fNums);
    filenames = filenames(iX);
else
    imgNums = arrayfun(@(x)(str2double(...
        x.name(max(regexp(x.name(1:end-4),'\D'))+1:end-4))),imFiles);
end
  
% ---- Generate image file names with full paths  ---- %
filenamesWithPath = cellfun(@(x) fullfile(imDirectory,x),filenames,'uniformoutput',0);

% ---- Create sturcture variable for final output  ---- %
imageFiles.imFiles = imFiles;
imageFiles.filenames = filenames;
imageFiles.filenamesWithPath = filenamesWithPath;
imageFiles.imgNums = imgNums;

